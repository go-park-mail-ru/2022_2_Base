// Code generated by MockGen. DO NOT EDIT.
// Source: authMiddleware.go

// Package mock_delivery is a generated GoMock package.
package mocks

import (
        http "net/http"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
)

// MockAuthenticationMiddlewareInterface is a mock of AuthenticationMiddlewareInterface interface.
type MockAuthenticationMiddlewareInterface struct {
        ctrl     *gomock.Controller
        recorder *MockAuthenticationMiddlewareInterfaceMockRecorder
}

// MockAuthenticationMiddlewareInterfaceMockRecorder is the mock recorder for MockAuthenticationMiddlewareInterface.
type MockAuthenticationMiddlewareInterfaceMockRecorder struct {
        mock *MockAuthenticationMiddlewareInterface
}

// NewMockAuthenticationMiddlewareInterface creates a new mock instance.
func NewMockAuthenticationMiddlewareInterface(ctrl *gomock.Controller) *MockAuthenticationMiddlewareInterface {
        mock := &MockAuthenticationMiddlewareInterface{ctrl: ctrl}
        mock.recorder = &MockAuthenticationMiddlewareInterfaceMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationMiddlewareInterface) EXPECT() *MockAuthenticationMiddlewareInterfaceMockRecorder {
        return m.recorder
}

// CheckAuthMiddleware mocks base method.
func (m *MockAuthenticationMiddlewareInterface) CheckAuthMiddleware(next http.Handler) http.Handler {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "CheckAuthMiddleware", next)
        ret0, _ := ret[0].(http.Handler)
        return ret0
}

// CheckAuthMiddleware indicates an expected call of CheckAuthMiddleware.
func (mr *MockAuthenticationMiddlewareInterfaceMockRecorder) CheckAuthMiddleware(next interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckAuthMiddleware", reflect.TypeOf((*MockAuthenticationMiddlewareInterface)(nil).CheckAuthMiddleware), next)
}