name: CI/CD

on:
  push:
    branches: [main]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - uses: actions/checkout@v3
      - name: run tests
        run: go test -race -coverpkg=./... -coverprofile cover.out.tmp ./...;
      - name: coverage
        run: go test -race -coverpkg=./... -coverprofile cover.out.tmp ./...; cat cover.out.tmp | grep -v "_easyjson.go" > cover1.out.tmp; cat cover1.out.tmp | grep -v ".pb.go" > cover2.out.tmp; cat cover2.out.tmp | grep -v "_mock.go" > cover.out; go tool cover -func cover.out

  deploy:
    needs: [linter, tests]
    runs-on: ubuntu-latest
    steps:
      - name: download service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            sudo apt update && sudo apt install git
            cd back && git fetch && git checkout main && git pull

      - name: stop running service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd back
            make stop && make stop

      - name: deploy service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd back
            make build
