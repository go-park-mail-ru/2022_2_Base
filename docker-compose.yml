version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${TEST_DB_HOST}
      - DATABASE_PORT=${TEST_DB_PORT}
    networks:
      - mynet
    ports:
      - '${TEST_DB_PORT}:${TEST_DB_PORT}'
    volumes:
      - './_postgres:/docker-entrypoint'
      - 'dbData:/var/lib/postgresql/data'

  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_PASSWORD: 12345
  #     POSTGRES_DB: golang
  #   ports:
  #     - '4568:5432'
  #   volumes:
  #     - dbData:/var/lib/postgresql/data

  # postgresdb_test:
  #   image: postgres:latest
  #   container_name: postgres_test_container
  #   environment:
  #     - POSTGRES_USER=${TEST_DB_USER}
  #     - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
  #     - POSTGRES_DB=${TEST_DB_NAME}
  #     - DATABASE_HOST=${TEST_DB_HOST}
  #   ports:
  #     - '4568:5432'
  #   volumes:
  #     - dbData-test:/var/lib/postgresql/data
  #   networks:
  #     - learning    

  app:
    container_name: go
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - TEST_POSTGRES_USER=${TEST_DB_USER}
      - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - TEST_POSTGRES_DB=${TEST_DB_NAME}
      - TEST_DATABASE_HOST=${TEST_DB_HOST}
      - TEST_DATABASE_PORT=${TEST_DB_PORT}
    # build the Dockerfile, alternatively use an image.
    build:
      context: .
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - "postgres"
    networks:
      - mynet

volumes:
  # dbData-test: # create the volume for persisting data test.
  dbData:


networks:
  mynet:
    driver: bridge